resources:
  - apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: kubelet
    spec:
      attachMetadata:
        node: false
      endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        honorTimestamps: true
        port: https-metrics
        relabelings:
        - action: replace
          sourceLabels:
          - __metrics_path__
          targetLabel: metrics_path
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecureSkipVerify: true
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        honorTimestamps: true
        metricRelabelings:
        - action: drop
          regex: container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
          sourceLabels:
          - __name__
        - action: drop
          regex: container_memory_(mapped_file|swap)
          sourceLabels:
          - __name__
        - action: drop
          regex: container_(file_descriptors|tasks_state|threads_max)
          sourceLabels:
          - __name__
        - action: drop
          regex: container_spec.*
          sourceLabels:
          - __name__
        - action: drop
          regex: .+;
          sourceLabels:
          - id
          - pod
        path: /metrics/cadvisor
        port: https-metrics
        relabelings:
        - action: replace
          sourceLabels:
          - __metrics_path__
          targetLabel: metrics_path
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecureSkipVerify: true
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        honorLabels: true
        honorTimestamps: true
        path: /metrics/probes
        port: https-metrics
        relabelings:
        - action: replace
          sourceLabels:
          - __metrics_path__
          targetLabel: metrics_path
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecureSkipVerify: true
      jobLabel: k8s-app
      selector:
        matchLabels:
          k8s-app: kubelet
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: victoria-metrics-operator
    data:
      values.yaml: |
        ## disable vm operator crds, managed separetly by gitops-crds repo
        crds:
          enabled: false
        victoria-metrics-operator:
          admissionWebhooks:
            enable: true
          crd:
            create: false
            cleanup:
              enabled: false
          operator:
            enable_converter_ownership: true
            disable_prometheus_converter: false
        kube-state-metrics:
          prometheusScrape: false
          selfMonitor:
            enabled: true
          vmServiceScrape:
            spec:
              endpoints:
                - port: http
                  honorLabels: true
                  metricRelabelConfigs:
                    - action: labeldrop
                      regex: (uid|container_id|image_id)
                - port: metrics
                  honorLabels: true
                  metricRelabelConfigs:
                    - action: labeldrop
                      regex: (uid|container_id|image_id)
              jobLabel: app.kubernetes.io/name
        grafana:
          assertNoLeakedSecrets: false
          sidecar:
            datasources:
              searchNamespace: ALL
            dashboards:
              searchNamespace: ALL
          plugins:
            - https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
            - victoriametrics-logs-datasource
        prometheus-node-exporter:
          enabled: true
        kubelet:
          enabled: true
        kubeProxy:
          enabled: true
          vmScrape:
            spec:
              jobLabel: jobLabel
              namespaceSelector:
                matchNames: [kube-system]
              endpoints:
                - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                  port: http-metrics
                  scheme: http
        kubeScheduler:
          enabled: false
        kubeEtcd:
          enabled: false
        kubeControllerManager:
          enabled: false
        defaultRules:
          rules:
            TooManyScrapeErrors:
              create: false
            TooHighChurnRate24h:
              create: false
            KubeHpaMaxedOut:
              create: false
            KubeMemoryOvercommit:
              create: false
          groups:
            etcd:
              create: false
            vmcluster:
              create: false
        vmsingle:
          spec:
            replicas: 1
            retentionPeriod: "30d"
            extraArgs:
              maxLabelsPerTimeseries: "40"
              search.maxUniqueTimeseries: "500000"
              dedup.minScrapeInterval: 30s
              search.maxQueryLen: "18765"
            extraEnvs:
              - name: GOMAXPROCS
                value: "${resources.vm_single.gomaxprocs}"
            resources:
              requests:
                memory: ${resources.vm_single.memory}
                cpu: ${resources.vm_single.cpu}
              limits:
                memory: ${resources.vm_single.memory}
            %{~ if create_pvcs ~}
            storage:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: ${resources.vm_single.size}
            %{~ else ~}
            storage:
            %{~ endif ~}
        vmagent:
          spec:
            remoteWrite:
              - url: "http://${metrics_collector.host}.:${metrics_collector.port}/api/v1/write"
            scrapeInterval: 30s
            selectAllByDefault: true
            resources:
              requests:
                memory: ${resources.vm_agent.memory}
                cpu: ${resources.vm_agent.cpu}
              limits:
                memory: ${resources.vm_agent.memory}
            extraArgs:
              promscrape.maxScrapeSize: '167772160'
        vmalert:
          enabled: false
        alertmanager:
          enabled: false
